@model HospitalScheduling.Models.ViewModels.NurseViewModel

@{
    ViewData["Title"] = "List";
    ViewData["Active"] = "Nurses";

}

<div class="hero-wrap" style="background-image: url('images/bg_6.jpg'); background-attachment:fixed;height:200px">
    <div class="overlay"></div>
    <div class="container" style="height:200px">
        <div class="row no-gutters slider-text align-items-center justify-content-center" style="height:200px" data-scrollax-parent="true">
            <div class="col-md-8 ftco-animate text-center fadeInUp ftco-animated">
                <p class="breadcrumbs"><span class="mr-2"><a asp-action="Index" asp-controller="Home">Home</a></span> <span>Nurses - @ViewData["Title"]</span></p>
                <h1 class="mb-3 bread">Nurses - @ViewData["Title"]</h1>
            </div>
        </div>
    </div>
</div>
<br />
<form asp-action="Index">
    <div style="min-width:100%">
        <a asp-action="Create" class="btn btn-primary" style="margin-left:15px">Create New</a>

        @{
            string search = "";
            try
            {
                search = string.IsNullOrEmpty(Context.Request.Form["search"]) ? string.Empty : Context.Request.Form["search"].ToString();

            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            finally
            {

                if (string.IsNullOrEmpty(search))
                {
                    search = ViewData["Search"] as string;
                }
                <input type="search" id="searchbox" autofocus oninput="this.form.submit();" onfocus="this.value = '@(search)'" onchange="this.form.submit()" name="search" style="position:absolute;right:0; margin-right:50px; border: 2px solid #167ce9;font-size: 1.2em;text-align: center;border-radius: 20px;background-color:transparent;" />
            }
        }
        <input type="submit" class="icon-search fa-7x" value="&#xf002;" style="font-family: FontAwesome;height:35px;width:35px; position:absolute;right:0;background-color:transparent;margin-right:5px;margin-top:1px; border: 2px solid #167ce9;font-size: 1.2em;text-align: center;border-radius: 20px;" />
    </div>
</form>
<br />
<table class="table" style="margin-left:15px;max-width:98.5% !important;">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Nurses.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nurses.FirstOrDefault().Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nurses.FirstOrDefault().Phone)
            </th>
            <th colspan="2">
                @Html.DisplayNameFor(model => model.Nurses.FirstOrDefault().Speciality)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Nurses)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Speciality.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.NurseID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.NurseID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.NurseID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div style="margin-left:30px">
    @{            
        string searchtext = "";
        try
        {
            searchtext = string.IsNullOrEmpty(Context.Request.Form["search"]) ? string.Empty : Context.Request.Form["search"].ToString();

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

        if (string.IsNullOrEmpty(searchtext))
        {
            searchtext = ViewData["Search"] as string;
        }

        @if (Model.Pagination.CurrentPage > 1)
        {
            <a href="@Url.Action("Index", "Nurses", new { @page = (Model.Pagination.CurrentPage > 1) ? 1 : Model.Pagination.CurrentPage, @search=searchtext})"><span class="icon-next">&lt;&lt;</span></a>
            <span>&nbsp;</span>
            <a href="@Url.Action("Index", "Nurses", new { @page = (Model.Pagination.CurrentPage > 1) ? Model.Pagination.CurrentPage-1 : Model.Pagination.CurrentPage, @search=searchtext })"><span class="icon-next">&lt;</span></a>
            <span>&nbsp;</span>
        }

        @for (int i = 1; i <= Model.Pagination.NumberPages; i++)
        {
            if (i == Model.Pagination.CurrentPage)
            {
                <span>@i.ToString()</span>
                <span>&nbsp;&nbsp;</span>
            }
            else if (i != Model.Pagination.CurrentPage && i <= Model.Pagination.CurrentPage + 1 && i >= Model.Pagination.CurrentPage - 1 && Model.Pagination.CurrentPage != 1)
            {
                @Html.ActionLink(i.ToString(), "Index", "Nurses", new { @page = i, @search = searchtext })
                <span>&nbsp;</span>
            }
            else if (Model.Pagination.CurrentPage == 1 || Model.Pagination.CurrentPage == Model.Pagination.NumberPages)
            {
                @Html.ActionLink(i.ToString(), "Index", "Nurses", new { @page = i, @search = searchtext })
                <span>&nbsp;</span>
            }
        }

        @if (Model.Pagination.CurrentPage < Model.Pagination.NumberPages)
        {
            <a href="@Url.Action("Index", "Nurses", new { @page = (Model.Pagination.CurrentPage < Model.Pagination.NumberPages) ? Model.Pagination.CurrentPage + 1 : Model.Pagination.CurrentPage , @search=searchtext})"><span class="icon-prev">&gt;</span></a>
            <span>&nbsp;&nbsp;</span>
            <a href="@Url.Action("Index", "Nurses", new { @page = (Model.Pagination.CurrentPage < Model.Pagination.NumberPages) ? Model.Pagination.NumberPages : Model.Pagination.CurrentPage , @search=searchtext})"><span class="icon-prev">&gt;&gt;</span></a>
            <span>&nbsp;&nbsp;</span>
        }
    }
</div>
